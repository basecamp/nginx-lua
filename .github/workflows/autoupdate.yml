name: Auto Update

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  auto_update:
    name: Auto Update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Generate Supported Versions
        id: auto-update-and-commit
        run: echo "::set-output name=ver_updated::$(make auto-update-and-commit)"

      - name: cancelling
        uses: andymckay/cancel-action@0.2
        if: ${{ env.VER_UPDATED == '0' }}
        env:
          VER_UPDATED=${{ steps.auto-update-and-commit.outputs.ver_updated }}

      - name: cancelling
        uses: andymckay/cancel-action@0.2
        if: ${{ job.status != 'success' }}

  docker_alpine:
    name: Build Docker Alpine
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*

      - name: Build images
        run: make build-alpine

      - name: Test images
        run: make test-alpine

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/master'

      - name: Push images
        run: make push-alpine
        if: github.ref == 'refs/heads/master'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metadata-alpine
          path: docs/metadata
          retention-days: 1

  docker_amazonlinux:
    name: Build Docker Amazon Linux
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*

      - name: Build images
        run: make build-amazonlinux

      - name: Test images
        run: make test-amazonlinux

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/master'

      - name: Push images
        run: make push-amazonlinux
        if: github.ref == 'refs/heads/master'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metadata-amazonlinux
          path: docs/metadata
          retention-days: 1

  docker_centos:
    name: Build Docker CentOS
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*

      - name: Build images
        run: make build-centos

      - name: Test images
        run: make test-centos

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/master'

      - name: Push images
        run: make push-centos
        if: github.ref == 'refs/heads/master'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metadata-centos
          path: docs/metadata
          retention-days: 1

  docker_debian:
    name: Build Docker Debian
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*

      - name: Build images
        run: make build-debian

      - name: Test images
        run: make test-debian

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/master'

      - name: Push images
        run: make push-debian
        if: github.ref == 'refs/heads/master'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metadata-debian
          path: docs/metadata
          retention-days: 1

  docker_fedora:
    name: Build Docker Fedora
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*

      - name: Build images
        run: make build-fedora

      - name: Test images
        run: make test-fedora

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/master'

      - name: Push images
        run: make push-fedora
        if: github.ref == 'refs/heads/master'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metadata-fedora
          path: docs/metadata
          retention-days: 1

  docker_ubuntu:
    name: Build Docker Ubuntu
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*

      - name: Build images
        run: make build-ubuntu

      - name: Test images
        run: make test-ubuntu

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/master'

      - name: Push images
        run: make push-ubuntu
        if: github.ref == 'refs/heads/master'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metadata-ubuntu
          path: docs/metadata
          retention-days: 1

  metadata:
    name: Generates Metadata
    runs-on: ubuntu-latest
    needs: [docker_alpine, docker_amazonlinux, docker_centos, docker_debian, docker_fedora, docker_ubuntu]
    steps:
      - uses: actions/checkout@v2

      - name: Restore amazonlinux metadata artifacts
        uses: actions/download-artifact@v2
        with:
          name: metadata-amazonlinux
          path: docs/metadata

      - name: Restore centos metadata artifacts
        uses: actions/download-artifact@v2
        with:
          name: metadata-centos
          path: docs/metadata

      - name: Restore debian metadata artifacts
        uses: actions/download-artifact@v2
        with:
          name: metadata-debian
          path: docs/metadata

      - name: Restore fedora metadata artifacts
        uses: actions/download-artifact@v2
        with:
          name: metadata-fedora
          path: docs/metadata

      - name: Restore ubuntu metadata artifacts
        uses: actions/download-artifact@v2
        with:
          name: metadata-ubuntu
          path: docs/metadata

      - name: Push metadata
        run: make auto-commit-metadata
        if: github.ref == 'refs/heads/master'

  auto_tag:
    name: Create Release
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - uses: actions/checkout@v2

      - name: Get version
        id: version
        run: echo "::set-output name=version::$(date +'v1.%Y%m%d.%H%M%S')"

      - name: Get supported versions
        id: supported_version
        run: echo "::set-output name=supported_versions::$(cat supported_versions)"

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
            ${{ steps.supported_versions.outputs.supported_versions }}
          draft: false
          prerelease: false