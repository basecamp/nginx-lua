name: Auto Update

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  auto_update:
    name: Auto Update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Generate Supported Versions
        continue-on-error: true
        id: auto-update-and-commit
        run: make auto-update-and-commit

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        if: steps.auto-update-and-commit.outputs == '0'
        with:
          name: broken-docker-update
          path: /tmp/generate-supported-versions
          retention-days: 5
          if-no-files-found: ignore

      - name: cancelling
        uses: andymckay/cancel-action@0.2
        if: steps.auto-update-and-commit.outputs == '0'

      - name: cancelling
        uses: andymckay/cancel-action@0.2
        if: ${{ job.status != 'success' }}

  docker_build:
    strategy:
      matrix:
        distro: [alpine, amazonlinux, centos, debian, fedora, ubuntu]

    name: Build Docker
    runs-on: ubuntu-latest
    needs: auto_update
    steps:
      - uses: actions/checkout@v2

      - name: Get file changes
        id: get_file_changes
        uses: dorner/file-changes-action@v1.2.0
        with:
          githubToken: ${{ secrets.GH_TOKEN }}
          plaintext: true

      - name: Check docker changes
        id: docker_changes
        run: "echo ${{ steps.get_file_changes.outputs.files }} | grep -E 'nginx|tpl' | wc -l | tr -d ' '"

      - name: Cleanup metadata artifacts
        run: rm -rf docs/metadata/*
        if: steps.docker_changes.output != '0'

      - name: Build images
        run: make build-${{ matrix.distro }}
        if: steps.docker_changes.output != '0'

      - name: Test images
        run: make test-${{ matrix.distro }}
        if: steps.docker_changes.output != '0'

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login  -u ${{ github.actor }} --password-stdin
        if: github.ref == 'refs/heads/main' && steps.docker_changes.output != '0'

      - name: Push images
        run: make push-${{ matrix.distro }}
        if: github.ref == 'refs/heads/main' && steps.docker_changes.output != '0'

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        if: steps.docker_changes.output != '0'
        with:
          name: metadata-${{ matrix.distro }}
          path: docs/metadata
          retention-days: 1
          if-no-files-found: ignore

  metadata:
    name: Generates Metadata
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - uses: actions/checkout@v2

      - name: Restore amazonlinux metadata artifacts
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: metadata-amazonlinux
          path: docs/metadata

      - name: Restore centos metadata artifacts
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: metadata-centos
          path: docs/metadata

      - name: Restore debian metadata artifacts
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: metadata-debian
          path: docs/metadata

      - name: Restore fedora metadata artifacts
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: metadata-fedora
          path: docs/metadata

      - name: Restore ubuntu metadata artifacts
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: metadata-ubuntu
          path: docs/metadata

      - name: Push metadata
        run: make auto-commit-metadata
        if: github.ref == 'refs/heads/main'

  auto_tag:
    name: Create Release
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - uses: actions/checkout@v2

      - name: Create Release
        run: make release
